filter(act=="23---Construcción")%>%
#pasar a long
gather(fecha,imai,-act)%>%
##Quitar Nas
filter(!is.na(imai))%>%
##Quitar X de fecha
mutate(fecha =str_remove(fecha, "X"))%>%
mutate(fecha=str_remove(fecha,".P."))%>%
mutate(fecha=str_remove(fecha,".R."))%>%
##Extraer año y mes
mutate(year=substr(fecha,1,4))%>%
mutate(month=substr(fecha,6,15))
View(imai)
##Segundo modelo
##Se estimará el empleo formal en la industria de la construcción
if(!require('pacman')) install.packages('pacman')
pacman::p_load(tidyverse, gganimate,
gifski, dplyr,lubridate, scales,ggimage)
##Se importa la base de datos de trabajadores asegurados al IMSS
##URL del archivo
urlimss<-"https://raw.githubusercontent.com/claudiodanielpc/imss/master/archivos/imss.csv"
imss<-read.csv(urlimss,
encoding="latin",header=TRUE,check.names=FALSE)
##se crean variables necesarias
imss<-imss%>%
##Variable fecha
mutate(fecha=ymd(paste(year, month, 15,sep= ' ')))%>%
filter(sector=="Construcción")%>%
##Variaciones anuales
group_by(fecha)%>%
summarise(trab=sum(trab))%>%
ungroup()%>%
mutate(imss=(trab/lag(trab,12)-1)*100)%>%
##Quitar NAs
filter(!is.na(imss))%>%
##Seleccionar variables
select(fecha,imss)%>%
filter(fecha<='2020-04-15')
###Se importa el Indicador Mensual de la Actividad Industrial
imaiurl<-"https://www.inegi.org.mx/contenidos/programas/imai/2013/datosabiertos/imai_mensual_csv.zip"
##Descargar
download.file(imaiurl,
destfile = "~/GitHub/forecast/imai_mensual_csv.zip")
##Extraer
unzip("~/GitHub/forecast/imai_mensual_csv.zip",
exdir = "~/GitHub/forecast")
###Actividad industrial total
imai<-read.csv("~/GitHub/forecast/conjunto_de_datos/conjunto_de_datos_imai_imai_var2020_05.csv",
header=T,encoding = "UTF-8")
imai<-imai%>%
##Renombrar primera variable
rename(act=1)%>%
###Dejar solo variación de construcción
filter(act=="23---Construcción")%>%
#pasar a long
gather(fecha,imai,-act)%>%
##Quitar Nas
filter(!is.na(imai))%>%
##Quitar X de fecha
mutate(fecha =str_remove(fecha, "X"))%>%
mutate(fecha=str_remove(fecha,".P."))%>%
mutate(fecha=str_remove(fecha,".R."))%>%
##Extraer año y mes
mutate(year=substr(fecha,1,4))%>%
mutate(month=substr(fecha,6,15))%>%
##Dejar agrupaciones anuales
filter(month=="Anual")
View(imai)
##Segundo modelo
##Se estimará el empleo formal en la industria de la construcción
if(!require('pacman')) install.packages('pacman')
pacman::p_load(tidyverse, gganimate,
gifski, dplyr,lubridate, scales,ggimage)
##Se importa la base de datos de trabajadores asegurados al IMSS
##URL del archivo
urlimss<-"https://raw.githubusercontent.com/claudiodanielpc/imss/master/archivos/imss.csv"
imss<-read.csv(urlimss,
encoding="latin",header=TRUE,check.names=FALSE)
##se crean variables necesarias
imss<-imss%>%
##Variable fecha
mutate(fecha=ymd(paste(year, month, 15,sep= ' ')))%>%
filter(sector=="Construcción")%>%
##Variaciones anuales
group_by(fecha)%>%
summarise(trab=sum(trab))%>%
ungroup()%>%
mutate(imss=(trab/lag(trab,12)-1)*100)%>%
##Quitar NAs
filter(!is.na(imss))%>%
##Seleccionar variables
select(fecha,imss)%>%
filter(fecha<='2020-04-15')
###Se importa el Indicador Mensual de la Actividad Industrial
imaiurl<-"https://www.inegi.org.mx/contenidos/programas/imai/2013/datosabiertos/imai_mensual_csv.zip"
##Descargar
download.file(imaiurl,
destfile = "~/GitHub/forecast/imai_mensual_csv.zip")
##Extraer
unzip("~/GitHub/forecast/imai_mensual_csv.zip",
exdir = "~/GitHub/forecast")
###Actividad industrial total
imai<-read.csv("~/GitHub/forecast/conjunto_de_datos/conjunto_de_datos_imai_imai_var2020_05.csv",
header=T,encoding = "UTF-8")
imai<-imai%>%
##Renombrar primera variable
rename(act=1)%>%
###Dejar solo variación de construcción
filter(act=="23---Construcción")%>%
#pasar a long
gather(fecha,imai,-act)%>%
##Quitar Nas
filter(!is.na(imai))%>%
##Quitar X de fecha
mutate(fecha =str_remove(fecha, "X"))%>%
mutate(fecha=str_remove(fecha,".P."))%>%
mutate(fecha=str_remove(fecha,".R."))%>%
##Extraer año y mes
mutate(year=substr(fecha,1,4))%>%
mutate(month=substr(fecha,6,15))%>%
##Eliminar agrupaciones anuales
filter(!month=="Anual")%>%
##Variable fecha
mutate(fecha=ymd(paste(year, month, 15,sep= ' ')))%>%
###Dejar observaciones que coincidan con datos del IMSS
filter(fecha>='1998-07-15' & fecha<='2020-04-15')%>%
##Seleccionar variables
select(fecha,imai)
base<-cbind(imss,imai)%>%
rename(x=3)%>%
select(fecha,imss,imai)%>%
##Se transforma a serie de tiempo
ts(.,start=c(1998,7),frequency=12)
##Se crea el modelo
imaiest<-auto.arima(base[,"imss"])#,
#xreg=base[,"imai"])
plot(imaiest$x,col="red")
lines(fitted(imaiest),col="blue")
proyección<-forecast(imaiest,8)#xreg=rep(min(base[,3]),8))
proyección
autoplot(proyección)
##Crear serie de tiempo de IMAI para estimar valor restante
#imaits<-imai%>%
#ts(.,start=c(1998,7),frequency=12)
#imaiest<-auto.arima(imaits[,"value"])
##Segundo modelo
##Se estimará el empleo formal en la industria de la construcción
if(!require('pacman')) install.packages('pacman')
pacman::p_load(tidyverse, gganimate,
gifski, dplyr,lubridate, scales,ggimage)
##Se importa la base de datos de trabajadores asegurados al IMSS
##URL del archivo
urlimss<-"https://raw.githubusercontent.com/claudiodanielpc/imss/master/archivos/imss.csv"
imss<-read.csv(urlimss,
encoding="latin",header=TRUE,check.names=FALSE)
##se crean variables necesarias
imss<-imss%>%
##Variable fecha
mutate(fecha=ymd(paste(year, month, 15,sep= ' ')))%>%
filter(sector=="Construcción")%>%
##Variaciones anuales
group_by(fecha)%>%
summarise(trab=sum(trab))%>%
ungroup()%>%
mutate(imss=(trab/lag(trab,12)-1)*100)%>%
##Quitar NAs
filter(!is.na(imss))%>%
##Seleccionar variables
select(fecha,imss)%>%
filter(fecha>="2009-01-15" & fecha<='2020-04-15')
###Se importa el Indicador Mensual de la Actividad Industrial
imaiurl<-"https://www.inegi.org.mx/contenidos/programas/imai/2013/datosabiertos/imai_mensual_csv.zip"
##Descargar
download.file(imaiurl,
destfile = "~/GitHub/forecast/imai_mensual_csv.zip")
##Extraer
unzip("~/GitHub/forecast/imai_mensual_csv.zip",
exdir = "~/GitHub/forecast")
###Actividad industrial total
imai<-read.csv("~/GitHub/forecast/conjunto_de_datos/conjunto_de_datos_imai_imai_var2020_05.csv",
header=T,encoding = "UTF-8")
imai<-imai%>%
##Renombrar primera variable
rename(act=1)%>%
###Dejar solo variación de construcción
filter(act=="23---Construcción")%>%
#pasar a long
gather(fecha,imai,-act)%>%
##Quitar Nas
filter(!is.na(imai))%>%
##Quitar X de fecha
mutate(fecha =str_remove(fecha, "X"))%>%
mutate(fecha=str_remove(fecha,".P."))%>%
mutate(fecha=str_remove(fecha,".R."))%>%
##Extraer año y mes
mutate(year=substr(fecha,1,4))%>%
mutate(month=substr(fecha,6,15))%>%
##Eliminar agrupaciones anuales
filter(!month=="Anual")%>%
##Variable fecha
mutate(fecha=ymd(paste(year, month, 15,sep= ' ')))%>%
###Dejar observaciones que coincidan con datos del IMSS
filter(fecha>='2009-01-15' & fecha<='2020-04-15')%>%
##Seleccionar variables
select(fecha,imai)
base<-cbind(imss,imai)%>%
rename(x=3)%>%
select(fecha,imss,imai)%>%
##Se transforma a serie de tiempo
ts(.,start=c(1998,7),frequency=12)
##Se crea el modelo
imaiest<-auto.arima(base[,"imss"])#,
#xreg=base[,"imai"])
plot(imaiest$x,col="red")
lines(fitted(imaiest),col="blue")
proyección<-forecast(imaiest,8)#xreg=rep(min(base[,3]),8))
proyección
autoplot(proyección)
##Crear serie de tiempo de IMAI para estimar valor restante
#imaits<-imai%>%
#ts(.,start=c(1998,7),frequency=12)
#imaiest<-auto.arima(imaits[,"value"])
##Segundo modelo
##Se estimará el empleo formal en la industria de la construcción
if(!require('pacman')) install.packages('pacman')
pacman::p_load(tidyverse, gganimate,
gifski, dplyr,lubridate, scales,ggimage)
##Se importa la base de datos de trabajadores asegurados al IMSS
##URL del archivo
urlimss<-"https://raw.githubusercontent.com/claudiodanielpc/imss/master/archivos/imss.csv"
imss<-read.csv(urlimss,
encoding="latin",header=TRUE,check.names=FALSE)
##se crean variables necesarias
imss<-imss%>%
##Variable fecha
mutate(fecha=ymd(paste(year, month, 15,sep= ' ')))%>%
filter(sector=="Construcción")%>%
##Variaciones anuales
group_by(fecha)%>%
summarise(trab=sum(trab))%>%
ungroup()%>%
mutate(imss=(trab/lag(trab,12)-1)*100)%>%
##Quitar NAs
filter(!is.na(imss))%>%
##Seleccionar variables
select(fecha,imss)%>%
filter(fecha>='2009-01-15' & fecha<='2020-04-15')
###Se importa el Indicador Mensual de la Actividad Industrial
imaiurl<-"https://www.inegi.org.mx/contenidos/programas/imai/2013/datosabiertos/imai_mensual_csv.zip"
##Descargar
download.file(imaiurl,
destfile = "~/GitHub/forecast/imai_mensual_csv.zip")
##Extraer
unzip("~/GitHub/forecast/imai_mensual_csv.zip",
exdir = "~/GitHub/forecast")
###Actividad industrial total
imai<-read.csv("~/GitHub/forecast/conjunto_de_datos/conjunto_de_datos_imai_imai_var2020_05.csv",
header=T,encoding = "UTF-8")
imai<-imai%>%
##Renombrar primera variable
rename(act=1)%>%
###Dejar solo variación de construcción
filter(act=="23---Construcción")%>%
#pasar a long
gather(fecha,imai,-act)%>%
##Quitar Nas
filter(!is.na(imai))%>%
##Quitar X de fecha
mutate(fecha =str_remove(fecha, "X"))%>%
mutate(fecha=str_remove(fecha,".P."))%>%
mutate(fecha=str_remove(fecha,".R."))%>%
##Extraer año y mes
mutate(year=substr(fecha,1,4))%>%
mutate(month=substr(fecha,6,15))%>%
##Eliminar agrupaciones anuales
filter(!month=="Anual")%>%
##Variable fecha
mutate(fecha=ymd(paste(year, month, 15,sep= ' ')))%>%
###Dejar observaciones que coincidan con datos del IMSS
filter(fecha>='2009-01-15' & fecha<='2020-04-15')%>%
##Seleccionar variables
select(fecha,imai)
base<-cbind(imss,imai)%>%
rename(x=3)%>%
select(fecha,imss,imai)%>%
##Se transforma a serie de tiempo
ts(.,start=c(1998,7),frequency=12)
##Se crea el modelo
imaiest<-auto.arima(base[,"imss"])#,
#xreg=base[,"imai"])
plot(imaiest$x,col="red")
lines(fitted(imaiest),col="blue")
proyección<-forecast(imaiest,8)#xreg=rep(min(base[,3]),8))
proyección
autoplot(proyección)
##Crear serie de tiempo de IMAI para estimar valor restante
#imaits<-imai%>%
#ts(.,start=c(1998,7),frequency=12)
#imaiest<-auto.arima(imaits[,"value"])
##Segundo modelo
##Se estimará el empleo formal en la industria de la construcción
if(!require('pacman')) install.packages('pacman')
pacman::p_load(tidyverse, gganimate,
gifski, dplyr,lubridate, scales,ggimage)
##Se importa la base de datos de trabajadores asegurados al IMSS
##URL del archivo
urlimss<-"https://raw.githubusercontent.com/claudiodanielpc/imss/master/archivos/imss.csv"
imss<-read.csv(urlimss,
encoding="latin",header=TRUE,check.names=FALSE)
##se crean variables necesarias
imss<-imss%>%
##Variable fecha
mutate(fecha=ymd(paste(year, month, 15,sep= ' ')))%>%
filter(sector=="Construcción")%>%
##Variaciones anuales
group_by(fecha)%>%
summarise(trab=sum(trab))%>%
ungroup()%>%
mutate(imss=(trab/lag(trab,12)-1)*100)%>%
##Quitar NAs
filter(!is.na(imss))%>%
##Seleccionar variables
select(fecha,imss)%>%
filter(fecha>='2009-01-15' & fecha<='2020-04-15')
View(imss)
##Segundo modelo
##Se estimará el empleo formal en la industria de la construcción
if(!require('pacman')) install.packages('pacman')
pacman::p_load(tidyverse, gganimate,
gifski, dplyr,lubridate, scales,ggimage)
##Se importa la base de datos de trabajadores asegurados al IMSS
##URL del archivo
urlimss<-"https://raw.githubusercontent.com/claudiodanielpc/imss/master/archivos/imss.csv"
imss<-read.csv(urlimss,
encoding="latin",header=TRUE,check.names=FALSE)
##se crean variables necesarias
imss<-imss%>%
##Variable fecha
mutate(fecha=ymd(paste(year, month, 15,sep= ' ')))%>%
filter(sector=="Construcción")%>%
##Variaciones anuales
group_by(fecha)%>%
summarise(trab=sum(trab))%>%
ungroup()%>%
mutate(imss=(trab/lag(trab,12)-1)*100)%>%
##Quitar NAs
filter(!is.na(imss))%>%
##Seleccionar variables
select(fecha,imss)%>%
filter(fecha>='2009-01-15' & fecha<='2020-04-15')
###Se importa el Indicador Mensual de la Actividad Industrial
imaiurl<-"https://www.inegi.org.mx/contenidos/programas/imai/2013/datosabiertos/imai_mensual_csv.zip"
##Descargar
download.file(imaiurl,
destfile = "~/GitHub/forecast/imai_mensual_csv.zip")
##Extraer
unzip("~/GitHub/forecast/imai_mensual_csv.zip",
exdir = "~/GitHub/forecast")
###Actividad industrial total
imai<-read.csv("~/GitHub/forecast/conjunto_de_datos/conjunto_de_datos_imai_imai_var2020_05.csv",
header=T,encoding = "UTF-8")
imai<-imai%>%
##Renombrar primera variable
rename(act=1)%>%
###Dejar solo variación de construcción
filter(act=="23---Construcción")%>%
#pasar a long
gather(fecha,imai,-act)%>%
##Quitar Nas
filter(!is.na(imai))%>%
##Quitar X de fecha
mutate(fecha =str_remove(fecha, "X"))%>%
mutate(fecha=str_remove(fecha,".P."))%>%
mutate(fecha=str_remove(fecha,".R."))%>%
##Extraer año y mes
mutate(year=substr(fecha,1,4))%>%
mutate(month=substr(fecha,6,15))%>%
##Eliminar agrupaciones anuales
filter(!month=="Anual")%>%
##Variable fecha
mutate(fecha=ymd(paste(year, month, 15,sep= ' ')))%>%
###Dejar observaciones que coincidan con datos del IMSS
filter(fecha>='2009-01-15' & fecha<='2020-04-15')%>%
##Seleccionar variables
select(fecha,imai)
base<-cbind(imss,imai)%>%
rename(x=3)%>%
select(fecha,imss,imai)%>%
##Se transforma a serie de tiempo
ts(.,start=c(2009,1),frequency=12)
##Se crea el modelo
imaiest<-auto.arima(base[,"imss"])#,
#xreg=base[,"imai"])
plot(imaiest$x,col="red")
lines(fitted(imaiest),col="blue")
proyección<-forecast(imaiest,8)#xreg=rep(min(base[,3]),8))
proyección
autoplot(proyección)
##Crear serie de tiempo de IMAI para estimar valor restante
#imaits<-imai%>%
#ts(.,start=c(1998,7),frequency=12)
#imaiest<-auto.arima(imaits[,"value"])
##Segundo modelo
##Se estimará el empleo formal en la industria de la construcción
if(!require('pacman')) install.packages('pacman')
pacman::p_load(tidyverse, gganimate,
gifski, dplyr,lubridate, scales,ggimage)
##Se importa la base de datos de trabajadores asegurados al IMSS
##URL del archivo
ruv<-read.csv("C:/Users/ALIENWARE/Desktop/datos ruv.csv",
encoding="latin",header=TRUE,check.names=FALSE)
ruv<-ruv%>%
##Variable fecha
mutate(fecha=ymd(paste(año, mes, 15,sep= ' ')))%>%
##Se transforma a serie de tiempo
ts(.,start=c(2013,1),frequency=12)
imaiest<-auto.arima(ruv[,"producción"])
plot(imaiest$x,col="red")
lines(fitted(imaiest),col="blue")
proyección<-forecast(imaiest,6)#xreg=rep(min(base[,3]),8))
proyección
autoplot(proyección)
##Segundo modelo
##Se estimará el empleo formal en la industria de la construcción
if(!require('pacman')) install.packages('pacman')
pacman::p_load(tidyverse, gganimate,
gifski, dplyr,lubridate, scales,ggimage)
##Se importa la base de datos de trabajadores asegurados al IMSS
##URL del archivo
ruvurl<-"https://raw.githubusercontent.com/claudiodanielpc/vivienda/ruv/datos%20ruv.csv"
ruv<-read.csv("ruvurl",
encoding="latin",header=TRUE,check.names=FALSE)
##Segundo modelo
##Se estimará el empleo formal en la industria de la construcción
if(!require('pacman')) install.packages('pacman')
pacman::p_load(tidyverse, gganimate,
gifski, dplyr,lubridate, scales,ggimage)
##Se importa la base de datos de trabajadores asegurados al IMSS
##URL del archivo
ruvurl<-"https://raw.githubusercontent.com/claudiodanielpc/vivienda/ruv/datos%20ruv.csv"
ruv<-read.csv(ruvurl,
encoding="latin",header=TRUE,check.names=FALSE)
class(proyección)
df<-fortify(proyección)
install.packages("ggfortify")
library(ggfortify)
df<-ggfortify::fortify(proyección)
df<-fortify(proyección)
View(df)
str(df)
View(df)
##Segundo modelo
##Se estimará el empleo formal en la industria de la construcción
if(!require('pacman')) install.packages('pacman')
pacman::p_load(tidyverse, gganimate,
gifski, dplyr,lubridate, scales,ggimage)
##Se importa la base de datos de trabajadores asegurados al IMSS
##URL del archivo
ruvurl<-"https://raw.githubusercontent.com/claudiodanielpc/vivienda/ruv/datos%20ruv.csv"
ruv<-read.csv(ruvurl,
encoding="latin",header=TRUE,check.names=FALSE)
ruv<-ruv%>%
##Variable fecha
mutate(fecha=ymd(paste(año, mes, 15,sep= ' ')))%>%
##Se transforma a serie de tiempo
ts(.,start=c(2013,1),frequency=12)
imaiest<-auto.arima(ruv[,"producción"])
plot(imaiest$x,col="red")
lines(fitted(imaiest),col="blue")
proyección<-forecast(imaiest,6)#xreg=rep(min(base[,3]),8))
proyección
autoplot(proyección)
##Transformar a dataframe
library(fortify)
df<-fortify(proyección)
##Crear highchart
highchart(type = "stock") %>%
hc_add_series(df, "line", hcaes(Index, Data), name = "Observado") %>%
hc_add_series(df, "line", hcaes(Index, Fitted), name = "Estimado") %>%
hc_add_series(df, "line", hcaes(Index, `Point Forecast`), name = "Pronóstico") %>%
hc_add_series(df, "arearange", hcaes(Index, low = `Lo 95`, high = `Hi 95`), name = "Intervalo")
##Segundo modelo
##Se estimará el empleo formal en la industria de la construcción
if(!require('pacman')) install.packages('pacman')
pacman::p_load(tidyverse, gganimate,
gifski, dplyr,lubridate, scales,ggimage)
##Se importa la base de datos de trabajadores asegurados al IMSS
##URL del archivo
ruvurl<-"https://raw.githubusercontent.com/claudiodanielpc/vivienda/ruv/datos%20ruv.csv"
ruv<-read.csv(ruvurl,
encoding="latin",header=TRUE,check.names=FALSE)
ruv<-ruv%>%
##Variable fecha
mutate(fecha=ymd(paste(año, mes, 15,sep= ' ')))%>%
##Se transforma a serie de tiempo
ts(.,start=c(2013,1),frequency=12)
imaiest<-auto.arima(ruv[,"producción"])
plot(imaiest$x,col="red")
lines(fitted(imaiest),col="blue")
proyección<-forecast(imaiest,6)#xreg=rep(min(base[,3]),8))
proyección
autoplot(proyección)
##Transformar a dataframe
library(fortify)
df<-fortify(proyección)
##Crear highchart
library(highcharter)
highchart(type = "stock") %>%
hc_add_series(df, "line", hcaes(Index, Data), name = "Observado") %>%
hc_add_series(df, "line", hcaes(Index, Fitted), name = "Estimado") %>%
hc_add_series(df, "line", hcaes(Index, `Point Forecast`), name = "Pronóstico") %>%
hc_add_series(df, "arearange", hcaes(Index, low = `Lo 95`, high = `Hi 95`), name = "Intervalo")
