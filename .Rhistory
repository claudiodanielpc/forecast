hc_add_series(datos$const[datos$tipo=='Estimado'],
name="Estimado",
color='#feb24c',
type="column",
pointWidth=4,
marker = list(symbol = 'circle') )%>%
hc_tooltip(pointFormat = '
{point.y:.1f}% ')%>%
hc_xAxis(categories =  unique(datos$trim)) %>%
hc_yAxis( title = list(text = "Var. % anual"))%>%
hc_credits(
enabled = TRUE, text = "Fuente: Elaborado por CANADEVI Nacional.
Gerencia de Fondos de Vivienda.
Coordinación de Indicadores de Vivienda con información de INEGI y Banco de México.",
style = list(fontSize = "8px")
)
```
## Trabajadores de la construcción asegurados ante el IMSS
Para el caso de la estimación del crecimiento de los trabajadores asegurados en la construcción, se toma como referencia la estimación del PIB de la construcción así como la estacionalidad de la serie del empleo. Es importante señalar que para poder realizar la estimación con el PIB, se utilizaron los registros de trabajadores al cierre del trimestre.
```{r echo=FALSE, message=FALSE, warning=FALSE}
library(tidyverse)
library(forecast)
library(scales)
library(lubridate)
library(ggfortify)
##Se importan los datos
##URL del archivo
trab<-read.csv("https://raw.githubusercontent.com/claudiodanielpc/forecast/master/pruebatrim.csv",
encoding="latin",header=TRUE,check.names=FALSE)
trab<-trab%>%
##Se transforma a serie de tiempo
ts(.,start=c(1999,1),frequency=4)
modelo<-auto.arima(trab[,"trab"],
xreg=trab[,"pib"])
##Se traen los datos estimados del PIB de la construcción
datos<-datos%>%
##Dejar solo los estimados
filter(tipo=="Estimado")%>%
##Solo construcción
filter(!is.na(const))%>%
select(const)%>%
rename(pib=const)%>%
#Eliminar primera observación
slice(-1)%>%
#Declarar serie de tiempo
ts(.,start=c(2020,3),frequency=4)
##Estimar valores futuros
fcast<-forecast(modelo,xreg=datos[,"pib"])
##Se crea la base de datos
df<-fortify(fcast)%>%
mutate(trim=seq(ymd("1999/1/1"), ymd("2020/12/30"), by = "quarter"))%>%
mutate(trim=quarter(trim,with_year=T))
##Crear highchart
library(highcharter)
highchart() %>%
hc_size(700,500)%>%
##Título
hc_title(text = "<b>Trabajadores de la construcción asegurados ante el IMSS</b>",
margin = 20, align = "left",
style = list(color = "black", useHTML = TRUE))%>%
##Subtítulo
hc_subtitle(text = "<i>1999-2020</i>
<br><i>Variación % anual</i>",
align = "left",
style = list(color = "black", fontWeight = "bold")) %>%
hc_add_series(df, "line", hcaes(trim, Data), name = "Observado",
color='#bdbdbd') %>%
#hc_add_series(df, "line", hcaes(Index, Fitted), name = "Estimado",
#             dashStyle = "shortdash",color='#feb24c') %>%
hc_add_series(df, "line", hcaes(trim, `Point Forecast`), name = "Estimado",
color='#feb24c',dashStyle = "shortdash") %>%
#hc_add_series(df, "arearange", hcaes(trim, low = `Lo 80`, high = `Hi 80`), name = "Intervalo", color="#e5f5e0")%>%
hc_tooltip(pointFormat = '
{point.y:.1f}% ')%>%
hc_yAxis( title = list(text = "Var. % anual"))%>%
hc_xAxis(categories =  unique(df$trim))%>%
hc_credits(
enabled = TRUE, text = "Fuente: Elaborado por CANADEVI Nacional.
Gerencia de Fondos de Vivienda.
Coordinación de Indicadores de Vivienda con información del IMSS e INEGI.",
style = list(fontSize = "8px")
)
```
## Producción de vivienda
En el caso de la producción de vivienda, se utiliza un modelo sencillo de media móvil tomando en consideración la estacionalidad de la serie.
```{r echo=FALSE, message=FALSE, warning=FALSE}
library(tidyverse)
library(forecast)
library(scales)
library(lubridate)
##Se importa la base de datos de RUV
##URL del archivo
ruvurl<-"https://raw.githubusercontent.com/claudiodanielpc/vivienda/ruv/datos%20ruv.csv"
ruv<-read.csv(ruvurl,
encoding="latin",header=TRUE,check.names=FALSE)
ruv<-ruv%>%
##Variable fecha
mutate(fecha=ymd(paste(year, month, 15,sep= ' ')))%>%
##Se transforma a serie de tiempo
ts(.,start=c(2013,1),frequency=12)
modruv<-auto.arima(ruv[,"prod"])
ruvest<-forecast(modruv,5)
##Transformar a dataframe
library(ggfortify)
df<-fortify(ruvest)
##Crear highchart
library(highcharter)
highchart(type = "stock") %>%
hc_size(700,500)%>%
##Título
hc_title(text = "<b>Producción de vivienda</b>",
margin = 20, align = "left",
style = list(color = "black", useHTML = TRUE))%>%
##Subtítulo
hc_subtitle(text = "<i>2013-2020</i>
<br><i>Número de viviendas</i>",
align = "left",
style = list(color = "black", fontWeight = "bold")) %>%
hc_add_series(df, "line", hcaes(Index, Data), name = "Observado",
color='#bdbdbd') %>%
#hc_add_series(df, "line", hcaes(Index, Fitted), name = "Estimado",
#             dashStyle = "shortdash",color='#feb24c') %>%
hc_add_series(df, "line", hcaes(Index, `Point Forecast`), name = "Estimado",
color='#feb24c',dashStyle = "shortdash") %>%
#hc_add_series(df, "arearange", hcaes(Index, low = `Lo 80`, high = `Hi 80`), name = "Intervalo", color="#e5f5e0")%>%
hc_tooltip(pointFormat = '{point.x: %Y-%b}
{point.y:,.0f}')%>%
hc_yAxis( title = list(text = "Viviendas"))%>%
hc_credits(
enabled = TRUE, text = "Fuente: Elaborado por CANADEVI Nacional.
Gerencia de Fondos de Vivienda.
Coordinación de Indicadores de Vivienda con información de RUV.",
style = list(fontSize = "8px")
)
```
knitr::opts_chunk$set(echo = FALSE)
pib<-read.csv("https://raw.githubusercontent.com/claudiodanielpc/forecast/master/pibvar.csv",
encoding="latin",header=TRUE,check.names=FALSE)%>%
mutate(trim=seq(ymd("1994/1/1"), ymd("2020/12/30"), by = "quarter"))%>%
mutate(trim=quarter(trim,with_year=T))
View(pib)
pibmod<-pib%>%
###Se dejan los datos observados
filter(trim<="2020.2")%>%
##Se transforma a serie de tiempo
ts(.,start=c(1994,1),frequency=4)
View(pibmod)
xreg<-pib%>%
##Se dejan los datos que permitirán estimar hacia adelante
filter(trim>"2020.2")%>%
##Se transforma a serie de tiempo
ts(.,start=c(2020,3),frequency=4)
View(xreg)
modelo<-auto.arima(pibmod[,"const"],
xreg=pibmod[,"pib"])
modelo
autoplot(modelo)
fcast<-forecast(modelo,xreg=xreg[,"pib"])%>%
as.data.frame()%>%
rename(const=1)%>%
select(const)
View(fcast)
fcast<-forecast(modelo,xreg=xreg[,"pib"])%>%
as.data.frame()%>%
rename(const=1)%>%
select(const)%>%
mutate(trim=seq(ymd("2020/6/1"), ymd("2020/12/30"), by = "quarter"))%>%
mutate(trim=quarter(trim,with_year=T))
fcast<-forecast(modelo,xreg=xreg[,"pib"])%>%
as.data.frame()%>%
rename(const=1)%>%
select(const)%>%
mutate(trim=seq(ymd("2020/7/1"), ymd("2020/12/30"), by = "quarter"))%>%
mutate(trim=quarter(trim,with_year=T))
View(fcast)
estima<-pibmod%>%
as.data.frame()%>%
select(const,trim)%>%
mutate(const = replace(const, trim<="2020.2", NA))
View(estima)
estima<-rbind(estima,fcast)
estima<-estima%>%
mutate(tipo="Estimado")
View(estima)
datos<-pibmod%>%
as.data.frame()%>%
select(const,trim)%>%
mutate(tipo="Observado")
datos<-rbind(datos,estima)
View(datos)
datos<-datos%>%
##Dejar solo los estimados
filter(tipo=="Estimado")%>%
##Solo construcción
filter(!is.na(const))%>%
select(const)%>%
rename(pib=const)
View(datos)
knitr::opts_chunk$set(echo = FALSE)
pib<-read.csv("https://raw.githubusercontent.com/claudiodanielpc/forecast/master/pibvar.csv",
encoding="latin",header=TRUE,check.names=FALSE)%>%
mutate(trim=seq(ymd("1994/1/1"), ymd("2020/12/30"), by = "quarter"))%>%
mutate(trim=quarter(trim,with_year=T))
library(tidyverse)
library(forecast)
library(scales)
library(lubridate)
##Datos
pib<-read.csv("https://raw.githubusercontent.com/claudiodanielpc/forecast/master/pibvar.csv",
encoding="latin",header=TRUE,check.names=FALSE)%>%
mutate(trim=seq(ymd("1994/1/1"), ymd("2020/12/30"), by = "quarter"))%>%
mutate(trim=quarter(trim,with_year=T))
##Se crea el dataset para el modelo
pibmod<-pib%>%
###Se dejan los datos observados
filter(trim<="2020.2")%>%
##Se transforma a serie de tiempo
ts(.,start=c(1994,1),frequency=4)
##Se establecen el vector de regresores
xreg<-pib%>%
##Se dejan los datos que permitirán estimar hacia adelante
filter(trim>"2020.2")%>%
##Se transforma a serie de tiempo
ts(.,start=c(2020,3),frequency=4)
##Se crea el modelo
modelo<-auto.arima(pibmod[,"const"],
xreg=pibmod[,"pib"])
#Pronóstico
fcast<-forecast(modelo,xreg=xreg[,"pib"])
fcast
trab<-read.csv("https://raw.githubusercontent.com/claudiodanielpc/forecast/master/pruebatrim.csv",
encoding="latin",header=TRUE,check.names=FALSE)
trab<-trab%>%
##Se transforma a serie de tiempo
ts(.,start=c(1999,1),frequency=4)
modelo<-auto.arima(trab[,"trab"],
xreg=trab[,"pib"])
modelo
autoplot(modelo)
plot(modelo$x,col="red")
lines(fitted(modelo),col="blue")
plot(pibmod$x,col="red")
lines(fitted(pibmod),col="blue")
pib<-read.csv("https://raw.githubusercontent.com/claudiodanielpc/forecast/master/pibvar.csv",
encoding="latin",header=TRUE,check.names=FALSE)%>%
mutate(trim=seq(ymd("1994/1/1"), ymd("2020/12/30"), by = "quarter"))%>%
mutate(trim=quarter(trim,with_year=T))
##Se crea el dataset para el modelo
pibmod<-pib%>%
###Se dejan los datos observados
filter(trim<="2020.2")%>%
##Se transforma a serie de tiempo
ts(.,start=c(1994,1),frequency=4)
##Se establecen el vector de regresores
xreg<-pib%>%
##Se dejan los datos que permitirán estimar hacia adelante
filter(trim>"2020.2")%>%
##Se transforma a serie de tiempo
ts(.,start=c(2020,3),frequency=4)
##Se crea el modelo
modelo<-auto.arima(pibmod[,"const"],
xreg=pibmod[,"pib"])
plot(modelo$x,col="red")
lines(fitted(modelo),col="blue")
View(modelo)
modelo[["fitted"]]
modelo[["x"]]
---
title: "<b>Prospectiva CANADEVI <br>Indicadores clave de construcción y vivienda</b>"
author: "CANADEVI Nacional<br>Gerencia de Fondos de Vivienda<br>Coordinación de Indicadores de Vivienda"
date: "1° de septiembre de 2020"
pagetitle: "Prospectiva CANADEVI"
output:
html_document:
toc: true
toc_depth: 3
toc_float: true
number_sections: true
runtime: shiny
---
<style>
body {
text-align: justify}
</style>
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)
```
# Introducción
El presente trabajo es un ejercicio de prospectiva realizado desde <b>[CANADEVI NACIONAL](https://www.canadevi.com.mx)</b> para ofrecer <b>estimaciones oportunas</b> de los indicadores clave de la construcción y, en particular de la vivienda. Lo anterior, con la finalidad de poder pronosticar el rumbo de éstas en el corto plazo y tener mayores elementos para la toma de decisiones.
Conforme se vayan dando a conocer los datos observados por parte de las fuentes oficiales y aquellas que sirvan como insumo para los cálculos, las estimaciones de este documento se irán actualizando.
Para tener más información sobre la coyuntura del sector, consulta nuestro <b>[Boletín Mensual](https://www.canadevi.com.mx/index.php/servicios/estadistica/canadevi-en-cifras/reporte-mensual)</b>.
# Datos
## Producto Interno Bruto de la Construcción
La estimación de crecimiento del Producto Interno Bruto de la Construcción toma como referencia los datos observados por INEGI tanto de la economía en su conjunto como del sector construcción. Para pronosticar los valores a futuro, se utilizan las estimaciones publicadas en la <b>[Encuesta sobre las expectativas de los especialistas en economía del sector privado](https://www.banxico.org.mx/publicaciones-y-prensa/encuestas-sobre-las-expectativas-de-los-especialis/encuestas-expectativas-del-se.html)</b> publicada de manera mensual por el Banco de México.
```{r echo=FALSE, message=FALSE}
library(tidyverse)
library(forecast)
library(scales)
library(lubridate)
##Datos
pib<-read.csv("https://raw.githubusercontent.com/claudiodanielpc/forecast/master/pibvar.csv",
encoding="latin",header=TRUE,check.names=FALSE)%>%
mutate(trim=seq(ymd("1994/1/1"), ymd("2020/12/30"), by = "quarter"))%>%
mutate(trim=quarter(trim,with_year=T))
##Se crea el dataset para el modelo
pibmod<-pib%>%
###Se dejan los datos observados
filter(trim<="2020.2")%>%
##Se transforma a serie de tiempo
ts(.,start=c(1994,1),frequency=4)
##Se establecen el vector de regresores
xreg<-pib%>%
##Se dejan los datos que permitirán estimar hacia adelante
filter(trim>"2020.2")%>%
##Se transforma a serie de tiempo
ts(.,start=c(2020,3),frequency=4)
##Se crea el modelo
modelo<-auto.arima(pibmod[,"const"],
xreg=pibmod[,"pib"])
#Pronóstico
fcast<-forecast(modelo,xreg=xreg[,"pib"])%>%
as.data.frame()%>%
rename(const=1)%>%
select(const)%>%
mutate(trim=seq(ymd("2020/7/1"), ymd("2020/12/30"), by = "quarter"))%>%
mutate(trim=quarter(trim,with_year=T))
estima<-pibmod%>%
as.data.frame()%>%
select(const,trim)%>%
mutate(const = replace(const, trim<="2020.2", NA))
estima<-rbind(estima,fcast)
estima<-estima%>%
mutate(tipo="Estimado")
##Crear la dataframe para graficarlo
datos<-pibmod%>%
as.data.frame()%>%
select(const,trim)%>%
mutate(tipo="Observado")
datos<-rbind(datos,estima)
##Gráfica dinámica
library(highcharter)
#hchart(fcast) %>% hc_add_theme(hc_theme_sandsignika())
highchart()%>%
hc_size(700,500)%>%
##Tipo de gráfico
##Título
hc_title(text = "<b>Producto Interno Bruto de la Construcción</b>",
margin = 20, align = "left",
style = list(color = "black", useHTML = TRUE))%>%
##Subtítulo
hc_subtitle(text = "<i>1994-2020</i>
<br><i>Variación % anual</i>",
align = "left",
style = list(color = "black", fontWeight = "bold")) %>%
##Series
hc_add_series(datos$const[datos$tipo=='Observado'],
name="Observado",
color='#bdbdbd',
type="column",
pointWidth=4,
marker = list(symbol = 'circle'))%>%
hc_add_series(datos$const[datos$tipo=='Estimado'],
name="Estimado",
color='#feb24c',
type="column",
pointWidth=4,
marker = list(symbol = 'circle') )%>%
hc_tooltip(pointFormat = '
{point.y:.1f}% ')%>%
hc_xAxis(categories =  unique(datos$trim)) %>%
hc_yAxis( title = list(text = "Var. % anual"))%>%
hc_credits(
enabled = TRUE, text = "Fuente: Elaborado por CANADEVI Nacional.
Gerencia de Fondos de Vivienda.
Coordinación de Indicadores de Vivienda con información de INEGI y Banco de México.",
style = list(fontSize = "8px")
)
```
## Trabajadores de la construcción asegurados ante el IMSS
Para el caso de la estimación del crecimiento de los trabajadores asegurados en la construcción, se toma como referencia la estimación del PIB de la construcción así como la estacionalidad de la serie del empleo. Es importante señalar que para poder realizar la estimación con el PIB, se utilizaron los registros de trabajadores al cierre del trimestre.
```{r echo=FALSE, message=FALSE, warning=FALSE}
library(tidyverse)
library(forecast)
library(scales)
library(lubridate)
library(ggfortify)
##Se importan los datos
##URL del archivo
trab<-read.csv("https://raw.githubusercontent.com/claudiodanielpc/forecast/master/pruebatrim.csv",
encoding="latin",header=TRUE,check.names=FALSE)
trab<-trab%>%
##Se transforma a serie de tiempo
ts(.,start=c(1999,1),frequency=4)
modelo<-auto.arima(trab[,"trab"],
xreg=trab[,"pib"])
##Se traen los datos estimados del PIB de la construcción
datos<-datos%>%
##Dejar solo los estimados
filter(tipo=="Estimado")%>%
##Solo construcción
filter(!is.na(const))%>%
select(const)%>%
rename(pib=const)%>%
#Eliminar primera observación
#slice(-1)%>%
#Declarar serie de tiempo
ts(.,start=c(2020,3),frequency=4)
##Estimar valores futuros
fcast<-forecast(modelo,xreg=datos[,"pib"])
##Se crea la base de datos
df<-fortify(fcast)%>%
mutate(trim=seq(ymd("1999/1/1"), ymd("2020/12/30"), by = "quarter"))%>%
mutate(trim=quarter(trim,with_year=T))
##Crear highchart
library(highcharter)
highchart() %>%
hc_size(700,500)%>%
##Título
hc_title(text = "<b>Trabajadores de la construcción asegurados ante el IMSS</b>",
margin = 20, align = "left",
style = list(color = "black", useHTML = TRUE))%>%
##Subtítulo
hc_subtitle(text = "<i>1999-2020</i>
<br><i>Variación % anual</i>",
align = "left",
style = list(color = "black", fontWeight = "bold")) %>%
hc_add_series(df, "line", hcaes(trim, Data), name = "Observado",
color='#bdbdbd') %>%
#hc_add_series(df, "line", hcaes(Index, Fitted), name = "Estimado",
#             dashStyle = "shortdash",color='#feb24c') %>%
hc_add_series(df, "line", hcaes(trim, `Point Forecast`), name = "Estimado",
color='#feb24c',dashStyle = "shortdash") %>%
#hc_add_series(df, "arearange", hcaes(trim, low = `Lo 80`, high = `Hi 80`), name = "Intervalo", color="#e5f5e0")%>%
hc_tooltip(pointFormat = '
{point.y:.1f}% ')%>%
hc_yAxis( title = list(text = "Var. % anual"))%>%
hc_xAxis(categories =  unique(df$trim))%>%
hc_credits(
enabled = TRUE, text = "Fuente: Elaborado por CANADEVI Nacional.
Gerencia de Fondos de Vivienda.
Coordinación de Indicadores de Vivienda con información del IMSS e INEGI.",
style = list(fontSize = "8px")
)
```
## Producción de vivienda
En el caso de la producción de vivienda, se utiliza un modelo sencillo de media móvil tomando en consideración la estacionalidad de la serie.
```{r echo=FALSE, message=FALSE, warning=FALSE}
library(tidyverse)
library(forecast)
library(scales)
library(lubridate)
##Se importa la base de datos de RUV
##URL del archivo
ruvurl<-"https://raw.githubusercontent.com/claudiodanielpc/vivienda/ruv/datos%20ruv.csv"
ruv<-read.csv(ruvurl,
encoding="latin",header=TRUE,check.names=FALSE)
ruv<-ruv%>%
##Variable fecha
mutate(fecha=ymd(paste(year, month, 15,sep= ' ')))%>%
##Se transforma a serie de tiempo
ts(.,start=c(2013,1),frequency=12)
modruv<-auto.arima(ruv[,"prod"])
ruvest<-forecast(modruv,5)
##Transformar a dataframe
library(ggfortify)
df<-fortify(ruvest)
##Crear highchart
library(highcharter)
highchart(type = "stock") %>%
hc_size(700,500)%>%
##Título
hc_title(text = "<b>Producción de vivienda</b>",
margin = 20, align = "left",
style = list(color = "black", useHTML = TRUE))%>%
##Subtítulo
hc_subtitle(text = "<i>2013-2020</i>
<br><i>Número de viviendas</i>",
align = "left",
style = list(color = "black", fontWeight = "bold")) %>%
hc_add_series(df, "line", hcaes(Index, Data), name = "Observado",
color='#bdbdbd') %>%
#hc_add_series(df, "line", hcaes(Index, Fitted), name = "Estimado",
#             dashStyle = "shortdash",color='#feb24c') %>%
hc_add_series(df, "line", hcaes(Index, `Point Forecast`), name = "Estimado",
color='#feb24c',dashStyle = "shortdash") %>%
#hc_add_series(df, "arearange", hcaes(Index, low = `Lo 80`, high = `Hi 80`), name = "Intervalo", color="#e5f5e0")%>%
hc_tooltip(pointFormat = '{point.x: %Y-%b}
{point.y:,.0f}')%>%
hc_yAxis( title = list(text = "Viviendas"))%>%
hc_credits(
enabled = TRUE, text = "Fuente: Elaborado por CANADEVI Nacional.
Gerencia de Fondos de Vivienda.
Coordinación de Indicadores de Vivienda con información de RUV.",
style = list(fontSize = "8px")
)
```
View(datos)
View(pib)
knitr::opts_chunk$set(echo = FALSE)
pib<-read.csv("https://raw.githubusercontent.com/claudiodanielpc/forecast/master/pibvar.csv",
encoding="latin",header=TRUE,check.names=FALSE)%>%
mutate(trim=seq(ymd("1994/1/1"), ymd("2020/12/30"), by = "quarter"))%>%
mutate(trim=quarter(trim,with_year=T))
View(pib)
pib<-read.csv("https://raw.githubusercontent.com/claudiodanielpc/forecast/master/pibvar.csv",
encoding="latin",header=TRUE,check.names=FALSE)%>%
mutate(trim=seq(ymd("1994/1/1"), ymd("2020/12/30"), by = "quarter"))%>%
mutate(trim=quarter(trim,with_year=T))
View(pib)
autoplot(modelo)
autplot(fcast)
autoplot(fcast)
